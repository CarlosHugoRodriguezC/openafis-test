const { findMatch } = require('./index.js');

// Test fingerprints from your data
const testFingerprint1 = "Rk1SACAyMAAAAAC6AAABAAFoAMUAxQEAAABkGkCJAC3qYEBDAECIYICRAFZoYIA/AGKGYEB/AHzqYEBzAIzoYEBSAIv1YEBpAJFzYIDHAJXdYIBKAKHxYIAvAK+VYIBaALTgYICGALfVYEBAANHkYEC1ANrRYIB7AOLJYEBEAOa5YECCAQHEYECXAQzKYIBfASKxYIB0ASO4YICOASzIYECBATi5YEBxAT41YECcAUTNYECSAU/CYAAA";

const testFingerprint2 = "Rk1SACAyMAAAAACiAAABAAFoAMUAxQEAAABkFoBsAB5uYEB+ACTgYEBSAGHmYEA8AIPkYEDFAI1KYECjAJNGYEA0AKLKYEBRAKvAYEAjALOiYIB+ALREYEAjALunYIBdAL+8YEAgAMirYEBIAOa3YIBeAO7CYIAeAQCpYIA+ARKxYEBLARnAYIBDASuzYIBMATXEYIBBAUGsYIBKAUzCYAAA";

// User database (from your fingerprints file)
const users = [
  {
    "id": 4,
    "type": 0,
    "user_id": 4,
    "username": "dispatchertk",
    "user": "Despachador Teknik",
    "employee_number": 123,
    "fingerprint": "Rk1SACAyMAAAAAGSAAABAAFoAMgAyAEAAABWPkCMARy9ZEB5AKN0YkBaAPrDYYAfAKqkX4AeAO61W0CvAKreW4BeAIiFWoBwAUaxWoBCAPfAWYBQADuFWEAwAImTWEBDANmwWEBKAFD/V4B/AUC2V4BOAT5FVkBQAS1FVYBAABZ+VYAWAIWYVEB4AEpuU0C2AOvQUoAeAJEQUkC1ATHHUkBoAG51UUBiAJjvUEBgALWUUIBYASFDUECgAERmT4BaAOC7T0CaAL7VToCeAI7jTIDBAMjaTEB8AOzHTICWAUg7TECwARLJS0C+AL5ZS4BUAVYwSkBmAFXsSUAyATpUSUBEAURLSEAYAF8LR0AQAFOQRUAEAKqeREBcAFKHQkBeAKfsQIAyABcDQIBkAE/zQIBkANrLPkCYASvEPEBEAVBQOIDAAQNRNoBUAGKHNgDKATrQNQAyAUnVNQBiAMKZNADSAN3cMwBiAM3ZMABMAOAkLwDNAPjVLgAWASvJLgDKAQpQKwDNAQbSKgBaANrJKg
  },
  {
    "id": 3,
    "type": 2,
    "user_id": 952,
    "username": "100002",
    "user": "Ryan Test",
    "employee_number": 100002,
    "fingerprint": "Rk1SACAyMAAAAAD8AAABAAFoAMgAyAEAAABWJUDKAStaY0CRASjTWkBbAIiHWUCkAPvgWECQAHZ9V0DHAU7PV0BcAE2NVkB2AHr9VkB+ALjpVUBbAHqCVEBWADIAVEAwAMcQVEDuAOhgVIBoANHuU0DgASfTU0BzAJLzUkDiANneUUDWAD5tUEBUAOL1UECiABf1UIBIAFULUEBsAKCDUEBOAHwDT4BYAPTuT0DiADToTUAyAP4LTUBWAKMGTIBGARnuSkB4ASXQSoCFADL7SIDkAF/pSEC2AE91RkAoAGSTQYAQARwhPkBJAUaoPoA9AGUHOgBMAUDAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="
  },
  {
    "id": 5,
    "type": 0,
    "user_id": 5,
    "username": "cahuroca",
    "user": "Carlos",
    "employee_number": 123456,
    "fingerprint": "Rk1SACAyMAAAAACuAAABAAFoAMUAxQEAAABaGECyAD3rYEBwAFGIYIC+AGZqYIBrAHOGYECqAInrYECfAJnqYEB8AJj3YECUAJ51YEB4ALHxYEBbAMGZYECGAMPeYECyAMfVYEBuAN3kYEDgAOXRYICpAO3HYEByAPG7YECvAQ/EYEDDARbKYIChAS64YECQATGvYEC+ATbIYECuAUO3YECgAUg3YEDIAU7NYAAA"
  }
];

console.log("=".repeat(90));
console.log("🔍 FINGERPRINT MATCHING ANALYSIS WITH SCORES");
console.log("=".repeat(90));

function testFingerprint(fingerprint, name, description) {
    console.log(`\n📋 ${name}:`);
    console.log(`   Description: ${description}`);
    console.log(`   Fingerprint: ${fingerprint.substring(0, 50)}...`);
    
    const match = findMatch(fingerprint, users);
    
    if (match) {
        console.log(`   ✅ MATCH FOUND:`);
        console.log(`      👤 User: ${match.user} (ID: ${match.id})`);
        console.log(`      🏢 Employee #: ${match.employee_number}`);
        console.log(`      🖐️  Finger Type: ${match.type} (0=thumb, 1=index, 2=middle, etc.)`);
        console.log(`      📊 Match Score: ${match.matchScore}/255`);
        console.log(`      🎯 Confidence: ${match.matchConfidence}`);
        
        // Analyze the score
        if (match.matchScore >= 80) {
            console.log(`      ✨ HIGH confidence match - Very likely authentic`);
        } else if (match.matchScore >= 60) {
            console.log(`      ⚠️  MEDIUM confidence match - Proceed with caution`);
        } else {
            console.log(`      🚨 LOW confidence match - Likely false positive!`);
        }
    } else {
        console.log(`   ❌ NO MATCH FOUND - No user in database matches this fingerprint`);
    }
}

// Test both fingerprints
testFingerprint(
    testFingerprint1, 
    "Test Fingerprint 1", 
    "Your enrolled thumb"
);

testFingerprint(
    testFingerprint2, 
    "Test Fingerprint 2", 
    "Your other finger (never enrolled)"
);

console.log("\n" + "=".repeat(90));
console.log("💡 ANALYSIS SUMMARY:");
console.log("=".repeat(90));

const match1 = findMatch(testFingerprint1, users);
const match2 = findMatch(testFingerprint2, users);

if (match1 && match2) {
    console.log(`📊 Fingerprint 1 Score: ${match1.matchScore} (${match1.matchConfidence} confidence)`);
    console.log(`📊 Fingerprint 2 Score: ${match2.matchScore} (${match2.matchConfidence} confidence)`);
    
    if (match1.id === match2.id) {
        console.log(`🔍 Both fingerprints matched the same person: ${match1.user}`);
    } else {
        console.log(`👥 Fingerprints matched different people:`);
        console.log(`   Fingerprint 1: ${match1.user}`);
        console.log(`   Fingerprint 2: ${match2.user}`);
    }
    
    // Security recommendation
    console.log(`\n🛡️  SECURITY RECOMMENDATION:`);
    if (match2.matchScore < 60) {
        console.log(`   The second fingerprint has a LOW confidence score (${match2.matchScore}).`);
        console.log(`   This suggests it's a false positive match and should be rejected.`);
        console.log(`   Consider implementing a minimum threshold of 60+ for production use.`);
    }
}

console.log("\n" + "=".repeat(90));
